trigger:
- Master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Synchronizing Git Repos...!
  displayName: 'Init'

- powershell: |
    Write-Host ' - - - - - - - - - - - - - - - - - - - - - - - - -'
    Write-Host ' reflect Azure Devops repo changes to GitHub repo'
    Write-Host ' - - - - - - - - - - - - - - - - - - - - - - - - - '

    $stageDir = '$(Build.SourcesDirectory)' | Split-Path
    $githubDir = $stageDir +"\"+"gitHub"
    $destination = $githubDir +"\"+"Master.git"
    $alias = 'jpugmire:5e52c08c8496142c39427975d02412bf8a8f083e'
    $sourceURL = 'https://dev.azure.com/S21-VanScoysBoys11-Black-McLendon-OReilly-Griffith/S21-VanScoysBoys11-Black.McLendon.OReilly.Griffith.Pugmire/_git/Master'
    $destURL = 'https://' + $alias + '@github.com/jpugmire/driver-incentive-frontend.git'

    #Check if the parent directory exists and delete
    if((Test-Path -path $githubDir))
    {
      Remove-Item -Path $githubDir -Recurse -force
    }

    if(!(Test-Path -path $githubDir))
    {
      New-Item -ItemType directory -Path $githubDir
      Set-Location $githubDir
      git clone --mirror $sourceURL
    }
    else
    {
      Write-Host "The given folder path $githubDir already exists";
    }

    Set-Location $destination

    Write-Output '*****Git removing remote secondary****'
    git remote rm secondary

    Write-Output '*****Git remote add****'
    git remote add --mirror=fetch secondary $destURL

    Write-Output '*****Git fetch origin****'
    git fetch $sourceURL

    Write-Output '*****Git push secondary****'
    git push secondary --all

    Write-Output '**Azure Devops repo synced with Github repo**'
    Set-Location $stageDir

    if((Test-Path -path $githubDir))
    {
      Remove-Item -Path $githubDir -Recurse -force
    }
  displayName: 'Clone and sync repos'

